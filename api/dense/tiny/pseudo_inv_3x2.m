function Jinv=pseudo_inv_3x2(J) %#codegen 
% PSEUDO_INV_3X2(J) computes the pseudo-inverse of a 3x2 matrix.

det =(J(1,1)^2*J(2,2)^2+J(1,1)^2*J(3,2)^2+J(2,1)^2*J(1,2)^2+...
      J(2,1)^2*J(3,2)^2+J(3,1)^2*J(1,2)^2+J(3,1)^2*J(2,2)^2-...
      2*J(1,1)*J(1,2)*J(2,1)*J(2,2)-2*J(1,1)*J(1,2)*J(3,1)*J(3,2)-2*J(2,1)*J(2,2)*J(3,1)*J(3,2));

Jinv=[J(1,1)*J(2,2)^2+J(1,1)*J(3,2)^2-J(1,2)*J(2,1)*J(2,2)-J(1,2)*J(3,1)*J(3,2),...
      J(2,1)*J(1,2)^2+J(2,1)*J(3,2)^2-J(2,2)*J(1,1)*J(1,2)-J(2,2)*J(3,1)*J(3,2),...
      J(3,1)*J(1,2)^2+J(3,1)*J(2,2)^2-J(3,2)*J(1,1)*J(1,2)-J(3,2)*J(2,1)*J(2,2);...
     -J(1,1)*J(2,1)*J(2,2)-J(1,1)*J(3,1)*J(3,2)+J(1,2)*J(2,1)^2+J(1,2)*J(3,1)^2,...
     -J(2,1)*J(1,1)*J(1,2)-J(2,1)*J(3,1)*J(3,2)+J(2,2)*J(1,1)^2+J(2,2)*J(3,1)^2,...
     -J(1,1)*J(1,2)*J(3,1)-J(2,1)*J(2,2)*J(3,1)+J(3,2)*J(1,1)^2+J(3,2)*J(2,1)^2];

Jinv = Jinv./det;

%  syms a b c d e f
%  
%  syms J det
%  
%  J=[a,b;c,d;e,f]

%  simplify(inv(J.'*J)*J.')
%  pretty(inv(J.'*J)*J.')
%  [  a*d^2+a*f^2-b*c*d-b*e*f,  c*b^2+c*f^2-d*a*b-d*e*f,  e*b^2+e*d^2-f*a*b-f*c*d]
%  [ -a*c*d-a*e*f+b*c^2+b*e^2, -c*a*b-c*e*f+d*a^2+d*e^2, -a*b*e-c*d*e+f*a^2+f*c^2]
